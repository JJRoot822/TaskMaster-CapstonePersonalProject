// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaskMaster.Data.Context;

#nullable disable

namespace TaskMaster.Migrations
{
    [DbContext(typeof(TaskMasterDbContext))]
    [Migration("20231026111101_SeedingRoleData")]
    partial class SeedingRoleData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.12");

            modelBuilder.Entity("TaskMaster.Model.Domain.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UserRoleId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.HasIndex("UserRoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TaskMaster.Model.Domain.UserRole", b =>
                {
                    b.Property<int>("UserRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("RoleDetails")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UserRoleId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            UserRoleId = 1,
                            RoleDetails = "The Administratorrole  is the highest role you are able to obtain.",
                            RoleName = "Admin"
                        },
                        new
                        {
                            UserRoleId = 2,
                            RoleDetails = "The Manager role is the second highest role you can obtain.",
                            RoleName = "Manager"
                        },
                        new
                        {
                            UserRoleId = 3,
                            RoleDetails = "The QA testing is the third highest role you can obtain",
                            RoleName = "Quality Assurance Tester"
                        },
                        new
                        {
                            UserRoleId = 4,
                            RoleDetails = "The Developer role is the fourth highest role you can obtain.",
                            RoleName = "Developer"
                        },
                        new
                        {
                            UserRoleId = 5,
                            RoleDetails = "The IT tech is the fifth highest role you can obtain.",
                            RoleName = "IT Tech"
                        },
                        new
                        {
                            UserRoleId = 6,
                            RoleDetails = "The client role is the lowest role.",
                            RoleName = "Client"
                        });
                });

            modelBuilder.Entity("TaskMaster.Model.Domain.User", b =>
                {
                    b.HasOne("TaskMaster.Model.Domain.UserRole", "Role")
                        .WithMany("Users")
                        .HasForeignKey("UserRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("TaskMaster.Model.Domain.UserRole", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
